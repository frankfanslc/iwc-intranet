version: '3'
services:  
  dnsmasqd:
    env_file:
      - ./.env
    image: ${DOCKER_ACCT}/intranet_dnsmasqd:${CPU_TYPE}-v${IWC_INTRANET_VERSION}
    build:
      context: ./dns/docker-dnsmasq
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    container_name: dnsmasq
    network_mode: host
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
    volumes:
      - ./config/webproc/webproc-dnsmasq.toml:/config/webproc/webproc-dnsmasq.toml
      - ./config/global/resolv.conf:/etc/resolv.conf
      - ./config/dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf
      - ./config:/intranet/config
      - ./ops/logs:/var/log
      - ./storage/ftp:/etc/dnsmasq/ftp
      - ./util:/intranet/util
    labels:
      com.iwc.stack: "alpine"
      com.iwc.description: "dnsmaq daemon as port 53 manager"
      com.iwc.type: "dns"
      com.iwc.context: "NET_ADMIN"
      com.iwc.network_mode: "host"
      com.iwc.notes: "This manages port 53 of the host (no port setting)"

  dnscryptd:
    env_file:
      - ./.env
    image: ${DOCKER_ACCT}/intranet_dnscrypt-proxy:${CPU_TYPE}-v${IWC_INTRANET_VERSION}
    build:
      context: ./dns/docker-dnscrypt
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    restart: unless-stopped
    container_name: dnscrypt
    ports:
      - ${DNSCRYPT_UDP}:53/udp
      - ${DNSCRYPT_TCP}:53/tcp
    depends_on:
      - dnsmasqd
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
    volumes:
      - ./config/webproc/webproc-dnscrypt.toml:/config/webproc/webproc-dnscrypt.toml
      - ./config/dnscrypt/dnscrypt.toml:/config/dnscrypt-proxy.toml
      - ./ops/logs:/var/log
      - ./config:/intranet/config
      - ./util:/intranet/util
    networks:
      - home
      - ops
    labels:
      com.iwc.stack: "alpine"
      com.iwc.description: "dnscrypt-proxy for encrypting dnsmasq traffic"
      com.iwc.type: "proxy"

  rsync:
    env_file:
      - ./.env
    image: ${DOCKER_ACCT}/intranet_rsync:${CPU_TYPE}-v${IWC_INTRANET_VERSION}
    container_name: rsync
    build:
      context: ./storage/docker-rsync
    ports:
      - ${RSYNC_PORT}:873
      - ${SSH_PORT}:22
    environment:
      - CERT_DIR=${CERT_DIR}
    volumes:
      - .ssh/authorized_keys:/root/.ssh/authorized_keys
      - ./storage/ftp/public:/data/public
      - ./storage/ftp/public:/volume
      - ./ops/certs:/etc/letsencrypt/live
      - ./ops/logs:/var/log
      - ./config:/intranet/config
      - ./util:/intranet/util
    networks:
      - home
      - ops
    labels:
      com.iwc.stack: "debian"
      com.iwc.description: "rsync and ssh server access to shared volumes"
      com.iwc.type: "storage"

networks:
  ops:
    driver: bridge
  home:
    driver: bridge
